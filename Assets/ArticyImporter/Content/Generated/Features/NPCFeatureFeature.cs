//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Articy.Languagegamearticy;
using Articy.Unity;
using Articy.Unity.Interfaces;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;


namespace Articy.Languagegamearticy.Features
{
    
    
    [Serializable()]
    public class NPCFeatureFeature : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private ArticyValueArticyModelList mdialogueLines = new ArticyValueArticyModelList();
        
        [SerializeField()]
        private String mcodeName;
        
        [SerializeField()]
        private Single mstageNumber;
        
        [SerializeField()]
        private UInt64 mOwnerId;
        
        [SerializeField()]
        private UInt32 mOwnerInstanceId;
        
        /// <summary>
        /// Related dialogue line entities
        /// </summary>
        public List<ArticyObject> dialogueLines
        {
            get
            {
                return mdialogueLines.GetValue();
            }
            set
            {
                var oldValue = mdialogueLines;
                mdialogueLines.SetValue(value);
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "NPCFeature.dialogueLines", oldValue.GetValue(), mdialogueLines.GetValue());
            }
        }
        
        public String Unresolved_codeName
        {
            get
            {
                return mcodeName;
            }
        }
        
        /// <summary>
        /// Write NPC code name here
        /// </summary>
        public String codeName
        {
            get
            {
                return Articy.Unity.ArticyTextExtension.Resolve(this, mcodeName);
            }
            set
            {
                var oldValue = mcodeName;
                mcodeName = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "NPCFeature.codeName", oldValue, mcodeName);
            }
        }
        
        public Single stageNumber
        {
            get
            {
                return mstageNumber;
            }
            set
            {
                var oldValue = mstageNumber;
                mstageNumber = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "NPCFeature.stageNumber", oldValue, mstageNumber);
            }
        }
        
        public UInt64 OwnerId
        {
            get
            {
                return mOwnerId;
            }
            set
            {
                mOwnerId = value;
            }
        }
        
        public UInt32 OwnerInstanceId
        {
            get
            {
                return mOwnerInstanceId;
            }
            set
            {
                mOwnerInstanceId = value;
            }
        }
        
        private void CloneProperties(object aClone, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Languagegamearticy.Features.NPCFeatureFeature newClone = ((Articy.Languagegamearticy.Features.NPCFeatureFeature)(aClone));
            mdialogueLines.CustomClone(newClone.mdialogueLines);
            newClone.codeName = Unresolved_codeName;
            newClone.stageNumber = stageNumber;
            newClone.OwnerId = OwnerId;
        }
        
        public object CloneObject(object aParent, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Languagegamearticy.Features.NPCFeatureFeature clone = new Articy.Languagegamearticy.Features.NPCFeatureFeature();
            CloneProperties(clone, aFirstClassParent);
            return clone;
        }
        
        public virtual bool IsLocalizedPropertyOverwritten(string aProperty)
        {
            return false;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            if ((aProperty == "dialogueLines"))
            {
                dialogueLines = ((List<ArticyObject>)(aValue));
                return;
            }
            if ((aProperty == "codeName"))
            {
                codeName = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "stageNumber"))
            {
                stageNumber = System.Convert.ToSingle(aValue);
                return;
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            if ((aProperty == "dialogueLines"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(dialogueLines);
            }
            if ((aProperty == "codeName"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(codeName);
            }
            if ((aProperty == "stageNumber"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(stageNumber);
            }
            return null;
        }
        #endregion
    }
}
