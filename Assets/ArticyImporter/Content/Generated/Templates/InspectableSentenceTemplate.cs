//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Articy.Languagegamearticy;
using Articy.Languagegamearticy.Features;
using Articy.Unity;
using Articy.Unity.Interfaces;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;


namespace Articy.Languagegamearticy.Templates
{
    
    
    [Serializable()]
    public class InspectableSentenceTemplate : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private ArticyValueInspectableSentenceFeatureFeature mInspectableSentenceFeature = new ArticyValueInspectableSentenceFeatureFeature();
        
        [SerializeField()]
        private UInt64 mOwnerId;
        
        [SerializeField()]
        private UInt32 mOwnerInstanceId;
        
        public Articy.Languagegamearticy.Features.InspectableSentenceFeatureFeature InspectableSentenceFeature
        {
            get
            {
                return mInspectableSentenceFeature.GetValue();
            }
            set
            {
                mInspectableSentenceFeature.SetValue(value);
            }
        }
        
        public UInt64 OwnerId
        {
            get
            {
                return mOwnerId;
            }
            set
            {
                mOwnerId = value;
                InspectableSentenceFeature.OwnerId = value;
            }
        }
        
        public UInt32 OwnerInstanceId
        {
            get
            {
                return mOwnerInstanceId;
            }
            set
            {
                mOwnerInstanceId = value;
                InspectableSentenceFeature.OwnerInstanceId = value;
            }
        }
        
        private void CloneProperties(object aClone, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Languagegamearticy.Templates.InspectableSentenceTemplate newClone = ((Articy.Languagegamearticy.Templates.InspectableSentenceTemplate)(aClone));
            if ((InspectableSentenceFeature != null))
            {
                newClone.InspectableSentenceFeature = ((Articy.Languagegamearticy.Features.InspectableSentenceFeatureFeature)(InspectableSentenceFeature.CloneObject(newClone, aFirstClassParent)));
            }
            newClone.OwnerId = OwnerId;
        }
        
        public object CloneObject(object aParent, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Languagegamearticy.Templates.InspectableSentenceTemplate clone = new Articy.Languagegamearticy.Templates.InspectableSentenceTemplate();
            CloneProperties(clone, aFirstClassParent);
            return clone;
        }
        
        public virtual bool IsLocalizedPropertyOverwritten(string aProperty)
        {
            return false;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            int featureIndex = aProperty.IndexOf('.');
            if ((featureIndex != -1))
            {
                string featurePath = aProperty.Substring(0, featureIndex);
                string featureProperty = aProperty.Substring((featureIndex + 1));
                if ((featurePath == "InspectableSentenceFeature"))
                {
                    InspectableSentenceFeature.setProp(featureProperty, aValue);
                }
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            int featureIndex = aProperty.IndexOf('.');
            if ((featureIndex != -1))
            {
                string featurePath = aProperty.Substring(0, featureIndex);
                string featureProperty = aProperty.Substring((featureIndex + 1));
                if ((featurePath == "InspectableSentenceFeature"))
                {
                    return InspectableSentenceFeature.getProp(featureProperty);
                }
            }
            return null;
        }
        #endregion
    }
}
